package edu.bupt.sort;

/**
 *     问题： 现在你有 10 个接口访问日志文件，每个日志文件大小约 300MB，每个文件里的日志都是按照时间戳从小到大排序的。
 * 你希望将这 10 个较小的日志文件，合并为 1 个日志文件，合并之后的日志仍然按照时间戳从小到大排列。如果处理上述排序任务的机器内存只有 1GB，
 * 你有什么好的解决思路，能“快速”地将这 10 个日志文件合并吗？
 *
 *    解答思路：
 *    可以为每个文件分配一个40M的数组，再另外分配一个400M的数组储存归并结果，每个文件每次读取40M，对十个数组做归并排序直到其中某个数组的数据被处理完，
 * 这时将归并结果写入磁盘，处理完的数组继续读入40M继续参与归并，以此类推，直到所有文件都处理完。
 *    因为先归并完的数据一定比还未读出来的数据小且小于当前已经读出来未归并的数据，所以如果哪个读出来的数据先完，就读出该文件下一批数据，出来继续比，直到读完
 *
 * 涉及K路归并
 * Created by Anderson on 2021/3/11
 */
public class LogSort {
}
